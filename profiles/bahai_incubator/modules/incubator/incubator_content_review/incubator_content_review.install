<?php
// $Id$

/**
 * @file
 *
 */

function incubator_content_review_install() {
  db_update('workbench_moderation_states')
    ->fields(array('label' => 'Editing Queue'))
    ->condition('name', 'needs_review')
    ->execute();
}

function incubator_content_review_enable() {
  $t = get_t();
  foreach (node_type_get_types() as $name => $type) {
    $options = variable_get("node_options_$type->type", array());
    if (!in_array('moderation', $options)) {
      $options[] = 'moderation';
      variable_set("node_options_$type->type", $options);
    }
  }
  drupal_set_message($t('Editing workflow has been enabled for all content types.  You can change the settings at !link', array('!link' => l($t('Configuration -> Editing workflow'), 'admin/config/content_review-settings'))));
  foreach (array('editor', 'administrator', 'authenticated_user') as $role) {
    $$role = user_role_load_by_name(str_replace('_', ' ', $role));
  }
  user_role_grant_permissions($authenticated_user->rid, array(
    'access workbench',
    'use workbench_moderation my drafts tab',
    'moderate content from draft to needs_review',
    'moderate content from needs_review to draft',
    'view own unpublished content',
    
  ));
  user_role_grant_permissions($editor->rid, array(
    'view moderation messages',
    'view all unpublished content',
    'view moderation history',
    'use workbench_moderation needs review tab',
    'moderate content from needs_review to published',
    
  ));
  user_role_grant_permissions($administrator->rid, array(
    'administer workbench',
    'administer workbench moderation',
  ));
  $weight = db_query('SELECT weight FROM {system} WHERE name = ?', array('workbench_moderation'))->fetchField();
  $query = db_update('system')
    ->fields(array('weight' => $weight + 1))
    ->condition('name', 'incubator_content_review')
    ->execute();
  
  // Make moderation entries for existing nodes
  if (!db_query("SELECT name FROM {workbench_moderation_states} WHERE name = ?", array('published'))->fetchField() ||
    !db_query("SELECT name FROM {workbench_moderation_states} WHERE name = ?", array('draft'))->fetchField()) {
    drupal_set_message($t('Content review listings may not display existing content, because the standard workbench moderation settings did not exist.'), 'warning');
  }
  else {
    $nodes = db_query('SELECT n.* FROM {node} as n LEFT JOIN {workbench_moderation_node_history} as h ON h.vid = n.vid WHERE h.hid IS NULL')->fetchAllAssoc('nid');
    if (!empty($nodes)) {
      $insert = db_insert('workbench_moderation_node_history')
        ->fields(array('vid', 'nid', 'from_state', 'state', 'uid', 'stamp', 'published', 'current'));
      foreach ($nodes as $node) {
        $values = array(
          'vid' => $node->vid,
          'nid' => $node->nid,
          'from_state' => 'draft',
          'state' => $node->status ? 'published' : 'draft',
          'uid' => $node->uid,
          'stamp' => $node->changed,
          'published' => $node->status ? 1 : 0,
          'current' => 1,
        );
        $insert->values($values);
        db_update('node_revision')
          ->fields(array(
            'log' => $t('Created before content review was activated.'),
          ))
          ->condition('vid', $node->vid)
          ->condition('log', '')
          ->execute();
      }
      $insert->execute();
      drupal_set_message($t('Added content review history for @count nodes', array('@count' => count($nodes))));
    }
  }
  
  // Make a new menu item for the workbench
  $item = array(
    'link_title' => $t('Workbench'),
    'link_path' => 'admin/workbench',
    'menu_name' => 'user-menu',
    'weight' => -15,
  );
  menu_link_save($item);
  drupal_flush_all_caches();
  menu_rebuild();
}

function incubator_content_review_disable() {
  $t = get_t();
  menu_link_delete(NULL, 'admin/workbench');
  foreach (node_type_get_types() as $name => $type) {
    $options = variable_get("node_options_$type->type", array());
    if (in_array('moderation', $options)) {
      $options = array_diff($options, array('moderation'));
      variable_set("node_options_$type->type", $options);
    }
  }
  drupal_set_message($t('Editing workflow has been disabled for all content types.  To disable workbench features entirely, you must disable the workbench modules at !link', array($t('Modules -> Advanced'), 'admin/modules/advanced')));
}
