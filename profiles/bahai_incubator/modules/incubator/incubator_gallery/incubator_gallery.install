<?php
// $Id$

/**
 * @file
 *
 */

function incubator_gallery_enable() {
  module_load_install('incubator');
  $t = get_t();
  //create gallery node type
  $gallery = array(
    'type' => 'gallery',
    'name' => $t('Photo Gallery'),
    'description' => $t('A simple photo gallery.'),
  );
  $pathauto_prefix = $t('gallery/', array(), array('#context' => 'Web search friendly URL - no special characters'));
  if (_incubator_create_nodetype($gallery, $pathauto_prefix, 0, TRUE, array('status', 'promote', 'revision', 'moderation'))) {
    _incubator_attach_field('field_gallery_images', 'gallery');
    _incubator_attach_field('field_activity_type', 'gallery');
    _incubator_attach_field('field_localities', 'gallery');
    _incubator_attach_field('field_tags', 'gallery');
    $photographer = _incubator_create_role('photographer', 'gallery');
    module_enable(array('plup'));  // for some reason, simpletests fail without this line.
    user_role_grant_permissions($photographer->rid, array('allow plupload'));
    if ($editor = user_role_load_by_name('editor')) { // intentional assignment of $editor
      user_role_grant_permissions($editor->rid, array('allow plupload'));
    }
  }
  variable_set('colorbox_custom_settings_activate', 1);
  variable_set('colorbox_slideshow', 1);
  variable_set('colorbox_slideshowspeed', 4000);
  variable_set('colorbox_transition_type', 'none');
  variable_set('colorbox_style', 'profiles/bahai_incubator/modules/incubator/files/colorbox1');
}

function incubator_gallery_disable(){
  module_load_install('incubator');
  _incubator_delete_nodetype('gallery');                                        // delete gallery node type
  $role = user_role_load_by_name('photographer');                               // remove user permissions
  user_role_change_permissions($role->rid, array());
}

function incubator_gallery_uninstall(){
  user_role_delete('photographer');                                             // remove photographer role
  field_delete_field('field_gallery_images');                                   // remove field data
}

function _incubator_fields_field_gallery_images($op = 'field') {
  $t = get_t();
  if ($op == 'field') {
    $field = array(
      'field_name' => 'field_gallery_images',
      'type' => 'image',
      'module' => 'image',
      'active' => '1',
      'locked' => '0',
      'cardinality' => '-1',
      'translatable' => '0',
      'storage' => array(
        'type' => 'field_sql_storage',
        'settings' => array()
      ),
      'indexes' => array('fid' => array('fid',),),
      'entity_types' => array(),
      'settings' => array(
        'uri_scheme' => 'public',
        'default_image' => 0,
      ),
    );
    return $field;
  }
  elseif ($op == 'instance') {
    $instance = array(
      'label' => 'Picture',
      'widget' => array(
        'weight' => '32',
        'type' => 'image_plupload',
        'module' => 'plup',
        'active' => 1,
        'settings' => array(
          'image_style' => 'gallery_thumb',
        ),
      ),
      'settings' => array(
        'file_directory' => 'gallery/[current-user:name]',
        'file_extensions' => 'png gif jpg jpeg',
        'max_filesize' => '3 MB',
        'max_resolution' => '',
        'min_resolution' => '',
        'alt_field' => 0,
        'title_field' => 1,
        'default_image' => 0,
        'user_register_form' => FALSE,
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'incubator_gallery_teaser',
          'weight' => '-10',
          'settings' => array(
            'large_style' => 'gallery_slide',
            'small_style' => 'gallery_thumb',
            'small_images_count' => '',
            'link' => 'image:page',
            'colorbox' => 1,
            'colorbox_image_style' => 'gallery_huge',
            'colorbox_gallery' => 'post',
            'colorbox_caption' => 'auto',
          ),
          'module' => 'incubator_gallery',
        ),
        'teaser' => array(
          'label' => 'hidden',
          'type' => 'incubator_gallery_teaser',
          'weight' => '-50',
          'settings' => array(
            'large_style' => 'gallery_thumb',
            'small_style' => 'gallery_teaser_thumb',
            'small_images_count' => 8,
            'link' => 'content',
            'colorbox' => FALSE,
          ),
          'module' => 'incubator_gallery',
        ),
        'search_result' => array(
          'label' => 'hidden',
          'type' => 'incubator_gallery_teaser',
          'weight' => '-50',
          'settings' => array(
            'large_style' => 'gallery_thumb',
            'small_style' => 'gallery_teaser_thumb',
            'small_images_count' => 8,
            'link' => 'content',
            'colorbox' => FALSE,
          ),
          'module' => 'incubator_gallery',
        ),
      ),
      'required' => 1,
      'description' => '',
      'field_name' => 'field_gallery_images',
    );
  return $instance;
  }
}

/**
 * Fix permissions on image gallery uploads
 */
function incubator_gallery_update_7101() {
  if ($photographer = user_role_load_by_name('photographer')) { // intentional assignment of $photographer
    user_role_grant_permissions($photographer->rid, array('allow plupload'));
  }
  if ($editor = user_role_load_by_name('editor')) { // intentional assignment of $editor
    user_role_grant_permissions($editor->rid, array('allow plupload'));
  }
}

/**
 * Reset image gallery field - see issues #1703312, #1703316 and #1703318
 */
function incubator_gallery_update_7102() {
  module_enable(array('incubator_gallery'));
  cache_clear_all();
  field_update_instance(array_merge(_incubator_fields_field_gallery_images('instance'), array('entity_type' => 'node', 'bundle' => 'gallery')));
  module_load_install('incubator');
  _incubator_attach_field('field_activity_type', 'gallery');
  _incubator_attach_field('field_localities', 'gallery');
  variable_del('nodeformscols_field_placements_gallery_default');
  _incubator_nodeformcols('gallery');
}

/**
 * Reset image gallery field to update teaser settings
 */
function incubator_gallery_update_7103() {
  module_enable(array('imagecache_actions', 'imagecache_canvasactions'), FALSE);
  field_update_instance(array_merge(_incubator_fields_field_gallery_images('instance'), array('entity_type' => 'node', 'bundle' => 'gallery')));
  module_load_install('incubator');
  _incubator_attach_field('field_tags', 'gallery');
  variable_del('nodeformscols_field_placements_gallery_default');
  _incubator_nodeformcols('gallery');
  drupal_flush_all_caches();
}

/**
 * Set up colorbox slideshows for the image galleries
 */
function incubator_gallery_update_7104() {
  if (!module_exists('colorbox')) {
    module_enable(array('colorbox'));
  }
  module_disable(array('galleryformatter'), FALSE);
  variable_set('colorbox_custom_settings_activate', 1);
  variable_set('colorbox_slideshow', 1);
  variable_set('colorbox_slideshowspeed', 4000);
  variable_set('colorbox_transition_type', 'none');
  variable_set('colorbox_style', 'none');
  $field = field_info_field('field_gallery_images');
  foreach ($field['bundles'] as $type => $type_def) {
    foreach ($field['bundles'][$type] as $bundle) {
      $instance = field_info_instance($type, 'field_gallery_images', $bundle);
      foreach ($instance['display'] as $displayname => $display) {
        $instance['display'][$displayname]['label'] = 'hidden';
        if ($display['module'] == 'galleryformatter') {
          $instance['display'][$displayname]['module'] = 'incubator_gallery';
          $instance['display'][$displayname]['type'] = 'incubator_gallery_teaser';
          if ($displayname == 'default') {
            $instance['display']['default']['settings'] = array(
              'large_style' => 'gallery_slide',
              'small_style' => 'gallery_thumb',
              'small_images_count' => '',
              'link' => 'image:page',
              'colorbox' => TRUE,
              'colorbox_image_style' => 'gallery_huge',
              'colorbox_gallery' => 'post',
              'colorbox_caption' => 'auto',
            );
          }
        }
        if ($instance['display'][$displayname]['type'] == 'incubator_gallery_teaser' && empty($display['settings'])) {
          $instance['display'][$displayname]['settings'] = array(
            'large_style' => 'gallery_thumb',
            'small_style' => 'gallery_teaser_thumb',
            'small_images_count' => '8',
            'link' => 'content',
            'colorbox' => FALSE,
          );
        }
      }
      field_update_instance($instance);
    }
  }
}

/**
 * Update gallery images field to point to image page
 */
function incubator_gallery_update_7105() {
  if ($instance = field_info_instance('node', 'field_gallery_images', 'gallery')) {
    if ($instance['display']['default']['settings']['link'] == 'content') {
      $instance['display']['default']['settings']['link'] = 'image:page';
      field_update_instance($instance);
    }
  }
}
